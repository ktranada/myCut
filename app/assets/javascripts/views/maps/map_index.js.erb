MyCut.Views.IndexMap = Backbone.View.extend({
  attributes: {
    id: "map-canvas"
  },
  events: {
    // "mouseover .leaflet-marker-icon": "displayTooltip"
  },

  initialize: function(options){
    this._markers = {};
    this.updatedLoc = options.updatedLoc;
    this.markerImage = "http://res.cloudinary.com/mycut/image/upload/c_scale,w_20/v1435185992/raty/scissor.png";
    this.listenTo(this.collection, 'add', this.addMarker);
    this.geoJSON = [];
  },

  initMap: function(addMarkers){
    var mapOptions = this.updatedLoc || {
      center: { lat: 37.7577, lng: -122.4376 },
      zoom: 14
    };
    this._map = L.mapbox.map(this.el, 'kevintran.3285da64')
        .setView([37.7577, -122.4376], 12);



    if (addMarkers){
      this.collection.each(this.addMarker.bind(this))
    }
  },

  centerMap: function(e){

    this._map.panTo(e.layer.getLatLng());
  },

  displayTooltip: function(){

  },

  // Event handlers
   addMarker: function (listing) {
     if (this._markers[listing.id]) { return };
     var view = this;

     var marker = L.icon({
          iconUrl: this.markerImage
      });

      this.geoJSON.push({
        type: "Feature",

      })
     var newMarker = L.marker([listing.get('latitude'), listing.get('longitude')], {icon: marker })
                      .bindPopup(JST['maps/info_window']({ shop: listing }))
                      .addTo(this._map);

     this._markers[listing.id] = newMarker;
   },

   removeMarker: function (listing) {
     var marker = this._markers[listing.id];
     marker.setMap(null);
     delete this._markers[listing.id];
   },

   changeCenter: function(loc){
     this._map.setView([loc[0] + .03, loc[1] + .1])
   },

   startBounce: function (id) {

      var marker = this._markers[id];
      marker.setAnimation(google.maps.Animation.BOUNCE);
    },

    stopBounce: function (id) {
      var marker = this._markers[id];
      marker.setAnimation(null);
    }

});
